;================================================================= 
title	Программа 1 (типа EXE)							;имя текстового файла  -  z1_pr1.asm
;------------------------------------------------------------------------------------------------------------
														;Определения
stdout		equ		1 
lf		equ		10										;код ASCII перевода строки  
cr		equ		13										;код  ASCII возврата каретки
;------------------------------------------------------------------------------------------------------------
text		segment	'code'								;начало сегмента, содержащего текст     					          		
														;программы - сегмент кода с именем text
   assume	CS:text, DS:data, ES:data, SS:stack 		;регистры  CS, DS, ES, SS					   		 
														;связаны с соответсвующими сегментами 
myproc		proc										;начало процедуры по имени myproc
		mov		AX,data   								;инициализируем сегментный регистр DS
		mov		DS,AX		
														;Вывод на экран строки текста  "Работаешь на ПК - изучи ассемблер" 		
		mov		AH,40h									;номер функции вывода в байт AH
		mov		BX,stdout								;дискриптор монитора в регистр BX
		mov		CX,meslen								;длину сообщения в регистр CX
		mov		DX,offset mes							;адрес (смещение) mes в регистр DX
		int		21h										;прерывание MS DOS, которое при
														;наличии функции 40h в байте AH
														;выводит строку на экран 
														;Завершение программы - возвращение в родительский процесс
outprog:	mov		AH,4Ch								;номер функции завершения в AH
		mov		AL, 00h									;код завершения 
		int		21h										;прерывание MS DOS, которое при
														;наличии функции 4Сh в байте AH
														;обеспечивает возврат в систему 
myproc		endp										;конец тела процедуры
text		ends										;конец сегмента кода 
;------------------------------------------------------------------------------------------------------------
data		segment										;начало сегмента данных
mes		db		'Работаешь на ПК - изучи ассемблер',cr,lf
meslen		equ		$-mes		       					;в meslen длина выводимого сообщения
data		ends										;конец сегмента данных
;------------------------------------------------------------------------------------------------------------
stack		segment	stack	'stack'  					;начало сегмента стека
		dw		128 dup (0)	  							;для стека выделено 128 слов
 stack		ends				 					 	;конец сегмента стека
;------------------------------------------------------------------------------------------------------------
		end		myproc									;конец программы
;=================================================================
