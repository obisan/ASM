;====== Программа 16.  Файл z5_pr16.asm ====================
MASM 
MODEL	small 
STACK	256
;=====================================================================================================================================================
.data 																	;матрица размером 2х5 - если ее не инициализировать, то для
																		;наглядности она может быть описана так: ;array dw 2 DUP (5 DUP (?))
																		;но мы ее инициализируем:
array	db	1,5,3,5,1,3,1,1,1,1
																		;логически это будет выглядеть так:
																		;array=	{1	2}
																		;		{3	4}
																		;		{5	6}
																		;		{7	3}
																		;		{9	0}
elem	dw	1															;элемент для поиска 
failed	db	0ah,0dh,'Element is not in array!','$'
success db 0ah,0dh,'Element is in array!','$'
foundtime	db ?														;количество найденных элементов
fnd	db	'time(s)',0ah,0dh,'$' 
;=====================================================================================================================================================
.code 
main: 	
	mov			ax,@data 	
	mov			ds,ax 	
	
	xor			ax,ax 	
	xor			si,si													;si=столбцы в матрице 	mov	bx,0				
																		;bx=строки в матрице
	mov			bx,offset array
	mov			cx,5		    										;число для внешнего цикла(по строкам)
out_c:																	;внешний цикл по строкам
	push		cx	  													;сохранение в стеке счетчика внешнего цикла 
	mov			cx,2	 
	xor			si,si
in_c:																	;внутренний цикл по строкам
	mov			al,array[bx][si]										;в ах первый элемент матрицы
	cmp			ax,elem
	jne			here
	inc			foundtime												;иначе увеличиваем счетчик совпавших
here:
	inc			si	  													;передвижение на следующий элемент в строке
	loop		in_c

	pop			cx														;восстанавливаем сх из стека (5)
	add			bx,2													;передвигаемся на следующую строку
	loop		out_c													;цикл (внешний)
;----------------------------------------------------------------------------------------------------------------------------
;============================================================================================================================

	cmp			foundtime,0h											;сравнение числа совпавших с 0
	ja			eql														;если больше 0, то переход
not_equal:																;нет элементов, совпавших с искомым
	mov			ah,09h													;вывод сообщения на экран
	mov			dx,offset failed
	int			21h
	jmp			exit													;на выход
eql:																	;есть элементы, совпавшие с искомым
	mov			ah,09h													;вывод сообщений на экран
	mov			dx,offset success
	int			21h
	mov			ah,02h
	mov			dl,foundtime
	add			dl,30h
	int			21h
	mov			ah,09h
	mov			dx,offset fnd
	int			21h
;---------------------------------------------------------------------------------------------------------------------------
exit:																	;выход
	mov			ax,4c00h												;стандартное завершение программы
	int			21h
;===========================================================================================================================
end	main																;конец программы
;===========================================================================================================================